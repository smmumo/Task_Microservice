#version: '3.7'
services:
  auth.services.api:
    image: auth.services
    container_name: authserviceapi
    build:
      context: ./src/AuthService
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5300:8080     
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"

  apigateway.services.api:
    image: apigateway.services
    container_name: apigatewayserviceapi
    build:
      context: ./src/ApiGatewayService
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5200:8080     
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"

  order.services.api:
    image: order.services
    container_name: orderserviceapi
    build:
      context: ./src/OrderService
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5168:8080     
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"

  product.services.api:
    image: product.services
    container_name: productserviceapi
    build:
      context: ./src/ProductService
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5100:8080    
    environment:
      ASPNETCORE_ENVIRONMENT: "Development" 

  task.service.queue:
    image: rabbitmq:management
    container_name: rabbitmqmanagementservice
    hostname: rabbitmqmanagementservice
    volumes:
        - ./.containers/queue/data/:/var/lib/rabbitmq
        - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest